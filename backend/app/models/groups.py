from typing import Literal, Listfrom sqlalchemy import Integerfrom sqlalchemy.dialects.postgresql import ENUMfrom .base import Basefrom sqlalchemy.orm import Mapped, mapped_column, relationshipclass Group(Base):    __tablename__ = 'Groups'    id: Mapped[int] = mapped_column('id', primary_key=True)    curse: Mapped[int] = mapped_column('curse', Integer, nullable=False)    number: Mapped[int] = mapped_column('number', Integer, nullable=False)    speciality: Mapped[Literal['km', 'ped', 'web', 'mech', 'km_mech']] = mapped_column('speciality', ENUM('km', 'ped', 'web', 'mech', 'km_mech', name='specialities'), nullable=False)    studs: Mapped[List['Student']] = relationship('Student', back_populates='group')    subjects_semester: Mapped[List['SubjectSemester']] = relationship('SubjectSemester', back_populates='group')    # messages --> advanced feature to send messages to each group    def __repr__(self) -> str:        return f"<Group(id={self.id}, curse={self.curse}, number={self.number}, speciality='{self.speciality}')>"