from sqlalchemy import funcfrom fastapi import APIRouter, HTTPExceptionfrom backend.app.dependencies.database import SessionDepfrom backend.app.models.teachers import Teacher as TeacherORMfrom backend.app.schemas.teachers import Teacherfrom typing import Listfrom urllib.parse import unquoterouter = APIRouter(tags=['Преподаватели'], prefix='/teachers')@router.get('/all_teachers', response_model=List[Teacher])def get_all_teachers(session:SessionDep):    res = session.query(TeacherORM).all()    if res:        return res    else:        pass@router.get('/', response_model=List[Teacher])def get_all_teachers_in(session:SessionDep, ids: str):    ids = [int(i) for i in unquote(ids).split(',')]    return session.query(TeacherORM).filter(TeacherORM.id.in_(ids)).all()@router.get('/filter/{department}/{position}')def get_filter_teachers(department: str, position:str, session:SessionDep):    department = unquote(department)    position = unquote(position)    if  department != 'none' and position != 'none':        res = session.query(TeacherORM).where(TeacherORM.department == department).where(TeacherORM.teacher_position == position)    else:        if  department != 'none':            res = session.query(TeacherORM).where(TeacherORM.department == department)        elif position != 'none':            res = session.query(TeacherORM).where(TeacherORM.teacher_position == position)        else:            res = session.query(TeacherORM)    return sorted(res.all(), key=lambda x: x.teacher_surname.lower())@router.get('/first_letters')def get_teachers_by_first_letters(full_name, session:SessionDep):    print(full_name)    decoded_fullname = unquote(full_name)    teachers_name =  session.execute(session.query(TeacherORM).filter(func.lower(TeacherORM.teacher_name).like(decoded_fullname.lower() + '%'))).scalars().all()    teachers_surname = session.execute(session.query(TeacherORM).filter(func.lower(TeacherORM.teacher_surname).like(decoded_fullname.lower() + '%'))).scalars().all()    res =  teachers_name + teachers_surname    return res