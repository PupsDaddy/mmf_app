from sqlalchemy.orm import Mapped, mapped_column, relationshipfrom sqlalchemy import ForeignKeyfrom .base import Baseclass ExamSession(Base):    __tablename__ = 'ExamsSession'    id: Mapped[int] = mapped_column('id', primary_key=True, autoincrement=True)    stud_id: Mapped[int] = mapped_column('stud_id', ForeignKey('Students.id', ondelete='SET NULL'))    exam_id: Mapped[int] = mapped_column('exam_id', ForeignKey('Exams.id', ondelete='SET NULL'))    semester_mark:  Mapped[int] = mapped_column('semester_mark', nullable=True)    exam_mark: Mapped[int] = mapped_column('exam_mark', nullable=True)    final_mark: Mapped[int] = mapped_column('final_mark', nullable=True)    exam: Mapped['Exam'] = relationship('Exam', back_populates='exams_session')    stud: Mapped['Student'] = relationship('Student', back_populates='exams_session')    def __repr__(self):        return (f"<ExamSession(id='{self.id}', stud_id={self.stud_id}', exam_id='{self.exam_id}', semester_mark='{self.semester_mark}', "                f"exam_mark='{self.exam_mark}', final_mark='{self.final_mark}')>")