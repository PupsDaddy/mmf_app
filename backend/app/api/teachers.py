from fastapi import APIRouter, HTTPExceptionfrom backend.app.dependencies.database import SessionDepfrom backend.app.schemas.teachers import Teacherfrom backend.app.crud import get_teachers, get_teachers_in, get_filtered_teachers, get_teachers_by_first_letters, get_teacher_by_idfrom typing import Listrouter = APIRouter(tags=['Преподаватели'], prefix='/teachers')@router.get('/all_teachers', response_model=List[Teacher])def get_all_teachers(session:SessionDep):    teachers = get_teachers(session)    return teachers@router.get('/{teacher_id}', response_model=Teacher)def get_teacher(session:SessionDep, teacher_id:int):    teacher = get_teacher_by_id(session, teacher_id)    if not teacher:        raise HTTPException(status_code=404, detail='Нет преподавателя с таким id!')    return teacher@router.get('/', response_model=List[Teacher])def get_all_teachers_in(session:SessionDep, ids: str):    teachers = get_teachers_in(session, ids)    return teachers@router.get('/filter/{department}/{position}')def get_filter_teachers(department: str, position:str, session:SessionDep):    teachers = get_filtered_teachers(session, department, position)    return teachers@router.get('/first_letters')def get_all_teachers_by_first_letters(full_name, session:SessionDep):    teachers = get_teachers_by_first_letters(session, full_name)    return teachers