from typing import Listfrom backend.app.crud import get_one_group_id, get_groups, get_groups_in, get_one_group_by_idfrom fastapi import APIRouter, HTTPExceptionfrom backend.app.dependencies.database import SessionDepfrom backend.app.schemas.groups import Grouprouter = APIRouter(tags=['Группы'], prefix='/groups')@router.get('/all', response_model=List[Group])def get_all_groups(session:SessionDep):    groups = get_groups(session)    return groups@router.get('/', response_model=List[Group])def get_all_groups_in(session:SessionDep, ids: str):    groups = get_groups_in(session, ids)    return groups@router.get('/{group_id}', response_model=Group)def get_group_by_id(group_id: int, session: SessionDep):    group = get_one_group_by_id(session, group_id)    if not group:        raise HTTPException(status_code=404, detail="Группы с таким id нет!")    return group@router.get('/{curse}/{group_number}')def get_group_id(curse:int, group_number: int, session:SessionDep):    group_id = get_one_group_id(session, curse, group_number)    print(group_id)    if not group_id:        raise HTTPException(status_code=404, detail='Группы с такими параметрами не существует !')    return group_id