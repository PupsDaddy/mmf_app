from fastapi import APIRouter, HTTPException, Queryfrom backend.app.dependencies.database import SessionDepfrom backend.app.schemas.syllabuses import Syllabusfrom typing import Listfrom backend.app.crud import get_one_syllabus_id_by_sub_name, get_syllabuses, get_syllabuses_inrouter = APIRouter(tags=['Учебные планы'], prefix='/syllabuses')@router.get('/plan_id')def get_sub_id_by_sub_name(speciality:str, start_year: int, session: SessionDep):    plan_id = get_one_syllabus_id_by_sub_name(session, speciality, start_year)    if not plan_id:        raise HTTPException(status_code=404, detail='Учебного плана с такими параметрами не существует!')    return plan_id@router.get('/all', response_model=List[Syllabus])def get_all_syllabuses(session:SessionDep):    syllabuses = get_syllabuses(session)    return syllabuses@router.get('/')def get_all_syllabuses_in(session:SessionDep, ids: str = Query(...)):    syllabuses = get_syllabuses_in(session, ids)    return syllabuses# @router.get('/', response_model=List[Syllabus])# def get_all_syllabuses_in(session:SessionDep, ids: str):#     ids = [int(i) for i in unquote(ids).split(',')]#     return session.query(SyllabusORM).filter(SyllabusORM.id.in_(ids)).all()