from sqlalchemy import String, ForeignKeyfrom .base import Basefrom sqlalchemy.orm import Mapped, mapped_column, relationshipfrom typing import Listclass Teacher(Base):    __tablename__ = 'Teachers'    id: Mapped[int] = mapped_column('id', primary_key=True, nullable=True)    teacher_surname: Mapped[str] = mapped_column('teacher_surname', String(50), nullable=True)    teacher_name: Mapped[str] = mapped_column('teacher_name', String(50), nullable=True)    teacher_father_name: Mapped[str] = mapped_column('teacher_father_name', String(50), nullable=True)    department: Mapped[str] = mapped_column('department', String(200), nullable=True)    teacher_position: Mapped[str] = mapped_column('teacher_position', String(200), nullable=True)    teachers_subjects_semester: Mapped[List['TeacherSubjectSemester']] = relationship('TeacherSubjectSemester', back_populates='teacher')    def __repr__(self) -> str:        return (f"<Teacher(id={self.id}, "                f"teacher_surname='{self.teacher_surname}', "                f"teacher_name='{self.teacher_name}', "                f"teacher_father_name='{self.teacher_father_name}', "                f"department='{self.department}', "                f"teacher_position='{self.teacher_position}')>")