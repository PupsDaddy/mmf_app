from typing import Listfrom .base import Basefrom sqlalchemy.orm import Mapped, mapped_column, relationshipfrom sqlalchemy import ForeignKeyfrom datetime import datefrom sqlalchemy.dialects.postgresql import DATEclass Exam(Base):    __tablename__ = 'Exams'    id: Mapped[int] = mapped_column('id', primary_key=True)    teacher_sub_semester_id: Mapped[int] = mapped_column('teacher_sub_semester_id', ForeignKey('TeachersSubjectsSemester.id', ondelete='CASCADE'))    exam_date: Mapped[date] = mapped_column('exam_date', DATE)    teacher_sub_semester: Mapped['TeacherSubjectSemester'] = relationship('TeacherSubjectSemester', back_populates='exams')    exams_session: Mapped[List['ExamSession']] = relationship('ExamSession', back_populates='exam')    def __repr__(self):        return f"<Exam(id='{self.id}', teacher_sub_semester_id='{self.teacher_sub_semester_id}', exam_date='{self.exam_date}')>"