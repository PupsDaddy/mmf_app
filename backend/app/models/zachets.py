from .base import Basefrom typing import Listfrom sqlalchemy.orm import Mapped, mapped_column, relationshipfrom sqlalchemy import ForeignKeyfrom datetime import datefrom sqlalchemy.dialects.postgresql import DATEclass Zachet(Base):    __tablename__ = 'Zachets'    id: Mapped[int] = mapped_column('id', primary_key=True)    teacher_sub_semester_id: Mapped[int] = mapped_column('teacher_sub_semester_id', ForeignKey('TeachersSubjectsSemester.id', ondelete='CASCADE'))    zachet_date: Mapped[date] = mapped_column('zachet_date', DATE)    teacher_sub_semester: Mapped['TeacherSubjectSemester'] = relationship('TeacherSubjectSemester', back_populates='zachets')    zachets_session: Mapped[List['ZachetSession']] = relationship('ZachetSession', back_populates='zachet')    def __repr__(self):        return f"<Zachet(id='{self.id}', teacher_sub_semester_id='{self.teacher_sub_semester_id}', zachet_date='{self.zachet_date}')>"