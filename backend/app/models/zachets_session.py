from sqlalchemy.orm import Mapped, mapped_column, relationshipfrom sqlalchemy import ForeignKey, Booleanfrom .base import Baseclass ZachetSession(Base):    __tablename__ = 'ZachetsSession'    id: Mapped[int] = mapped_column('id', primary_key=True, autoincrement=True)    stud_id: Mapped[int] = mapped_column('stud_id', ForeignKey('Students.id', ondelete='SET NULL'))    zachet_id: Mapped[int] = mapped_column('zachet_id', ForeignKey('Zachets.id', ondelete='SET NULL'))    is_passed: Mapped[bool] = mapped_column('is_passed', Boolean, nullable=True)    zachet: Mapped['Zachet'] = relationship('Zachet', back_populates='zachets_session')    stud: Mapped['Student'] = relationship('Student', back_populates='zachets_session')    def __repr__(self):        return f"<ZachetSession(id='{self.id}', stud_id='{self.stud_id}', zachet_id='{self.zachet_id}', is_passed='{self.is_passed}')>"